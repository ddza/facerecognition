{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dza\\\\OneDrive - Heimdal Security A S\\\\Desktop\\\\udemy\\\\facerecognition\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition\";\nimport Signin from \"./components/Signin/Signin\";\nimport Register from \"./components/Register/Register\";\nimport Rank from \"./components/Rank/Rank\";\nimport Particles from 'react-particles-js'; //import Clarifai from \"clarifai\";\n// const app = new Clarifai.App({\n//   apiKey: '92b68455837844df828ab124a04de2b7'\n//  });\n// const stub = ClarifaiStub.grpc();\n// const metadata = new grpc.Metadata();\n// metadata.set(\"authorization\", \"Key 92b68455837844df828ab124a04de2b7\");\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 80,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\nconst initialState = {\n  input: \"\",\n  imageUrl: \"\",\n  box: {},\n  route: \"signin\",\n  isSignedIn: false,\n  user: {\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    entries: 0,\n    joined: \"\"\n  }\n}; // function App() {\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      console.log(data);\n      const calrifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById(\"input-image\");\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: calrifaiFace.left_col * width,\n        topRow: calrifaiFace.top_row * height,\n        rightCol: width - calrifaiFace.right_col * width,\n        bottomRow: height - calrifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      }); //console.log(event.target.value)\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      }); // app.models.predict('c0c0ac362b03416da06ab3fa36fb58e3', this.state.input)\n      // app.models.predict('a403429f2ddf4b49b307e318f00e528b', \"https://media.glamour.com/photos/5a425fd3b6bcee68da9f86f8/master/w_2560%2Cc_limit/best-face-oil.png\")\n      // app.models\n      // // .predict('c0c0ac362b03416da06ab3fa36fb58e3', req.body.input)\n      //   .predict(\n      //       Clarifai.FACE_DETECT_MODEL, \n      //       this.state.input)\n\n      console.log(this.state.input);\n      fetch(\"http://localhost:3001/imageurl\", {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          input: this.state.input\n        })\n      }).then(response => {\n        console.log(response.json());\n      }).then(response => {\n        console.log(response);\n\n        if (response) {\n          fetch(\"http://localhost:3001/image\", {\n            method: \"put\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          }).catch(console.log);\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === \"signout\") {\n        this.setState(initialState);\n      } else if (route === \"home\") {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = initialState;\n  } // componentDidMount(){\n  //   fetch(\"http://localhost:3001\")\n  //     .then(response => response.json())\n  //     .then(data =>console.log(data))\n  // }\n\n\n  render() {\n    const {\n      isSignedIn,\n      imageUrl,\n      route,\n      box\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        className: \"particles\",\n        params: particlesOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        isSignedIn: isSignedIn,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), route === \"home\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {\n          name: this.state.user.name,\n          entries: this.state.user.entries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonSubmit: this.onButtonSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          box: box,\n          imageUrl: imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }, this) : route === \"signin\" ? /*#__PURE__*/_jsxDEV(Signin, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 12\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/dza/OneDrive - Heimdal Security A S/Desktop/udemy/facerecognition/src/App.js"],"names":["React","Component","Navigation","Logo","ImageLinkForm","FaceRecognition","Signin","Register","Rank","Particles","particlesOptions","particles","number","value","density","enable","value_area","initialState","input","imageUrl","box","route","isSignedIn","user","id","name","email","entries","joined","App","constructor","loadUser","data","setState","calculateFaceLocation","console","log","calrifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","onInputChange","event","target","onButtonSubmit","state","fetch","method","headers","body","JSON","stringify","then","response","json","count","Object","assign","catch","err","onRouteChange","render"],"mappings":"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","sourcesContent":["\nimport React, {Component} from \"react\";\nimport './App.css';\n\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition\";\nimport Signin from \"./components/Signin/Signin\";\nimport Register from \"./components/Register/Register\";\nimport Rank from \"./components/Rank/Rank\";\nimport Particles from 'react-particles-js';\n//import Clarifai from \"clarifai\";\n\n// const app = new Clarifai.App({\n//   apiKey: '92b68455837844df828ab124a04de2b7'\n//  });\n// const stub = ClarifaiStub.grpc();\n\n// const metadata = new grpc.Metadata();\n// metadata.set(\"authorization\", \"Key 92b68455837844df828ab124a04de2b7\");\n\n\nconst particlesOptions = {\n  particles:{\n    number:{\n      value:80,\n      density:{\n        enable:true,\n        value_area:800\n      }\n    }\n  }\n} \nconst initialState = {\n  input:\"\",\n  imageUrl: \"\",\n  box :{},\n  route: \"signin\",\n  isSignedIn: false, \n  user: {\n    id: \"\",\n    name: \"\", \n    email: \"\", \n    entries: 0,\n    joined: \"\"\n  }\n}\n\n// function App() {\nclass App extends Component{\n  constructor(){\n    super();\n    this.state =initialState;\n  }\n\n  // componentDidMount(){\n  //   fetch(\"http://localhost:3001\")\n  //     .then(response => response.json())\n  //     .then(data =>console.log(data))\n  // }\n  loadUser = (data)=>{\n    this.setState({user:{\n          id: data.id,\n          name:data.name, \n          email:data.email, \n          entries: data.entries,\n          joined: data.joined\n    }})\n  }\n  calculateFaceLocation = (data)=>{\n    console.log(data)\n    const calrifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById(\"input-image\");\n    const width = Number(image.width);\n    const height = Number(image.height);\n   \n    return {\n        leftCol: calrifaiFace.left_col * width,\n        topRow: calrifaiFace.top_row * height,\n        rightCol: width -  (calrifaiFace.right_col * width),\n        bottomRow: height - (calrifaiFace.bottom_row * height)\n    }\n  }\n  displayFaceBox = (box) => {\n   \n      this.setState({box: box})\n  }\n  onInputChange = (event)=>{\n    this.setState({input: event.target.value})\n    //console.log(event.target.value)\n  }\n  onButtonSubmit = ()=>{\n      this.setState({imageUrl: this.state.input})\n\n\n   // app.models.predict('c0c0ac362b03416da06ab3fa36fb58e3', this.state.input)\n    // app.models.predict('a403429f2ddf4b49b307e318f00e528b', \"https://media.glamour.com/photos/5a425fd3b6bcee68da9f86f8/master/w_2560%2Cc_limit/best-face-oil.png\")\n    // app.models\n    // // .predict('c0c0ac362b03416da06ab3fa36fb58e3', req.body.input)\n    //   .predict(\n    //       Clarifai.FACE_DETECT_MODEL, \n    //       this.state.input)\n    console.log(this.state.input)\n      fetch(\"http://localhost:3001/imageurl\", {\n        method:\"post\", \n        headers: {\"Content-Type\" : \"application/json\"},\n        body: JSON.stringify({\n          input: this.state.input\n        })\n      })\n      .then(response => {console.log(response.json())})\n      .then(response => {\n        console.log(response)\n        if(response){\n          fetch(\"http://localhost:3001/image\", {\n            method:\"put\", \n            headers: {\"Content-Type\" : \"application/json\"},\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          })\n          .then(response =>response.json())\n          .then(count =>{\n            this.setState(Object.assign(this.state.user, {entries: count}))\n          })\n          .catch(console.log)\n        }\n        this.displayFaceBox(this.calculateFaceLocation(response))\n      })\n\n      .catch (err =>console.log(err));\n\n  }\n  onRouteChange =(route)=>{\n    if(route === \"signout\"){\n      this.setState(initialState)\n    }else if(route === \"home\"){\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route})\n  }\n\n  render(){\n   const {isSignedIn, imageUrl, route, box} = this.state;\n    return (\n      <div className=\"App\">\n        <Particles  className=\"particles\"\n                  params={particlesOptions} />\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\n        { route === \"home\" ?\n            <div>\n\n              <Logo />\n              <Rank name={this.state.user.name} entries={this.state.user.entries}/>\n              <ImageLinkForm \n              onInputChange={this.onInputChange}  \n              onButtonSubmit={this.onButtonSubmit} \n              />\n              <FaceRecognition box={box} imageUrl ={imageUrl} />\n              </div>\n        :(\n          route===\"signin\" \n          ?<Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n          :<Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n\n        )\n          \n      \n      }\n    \n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}